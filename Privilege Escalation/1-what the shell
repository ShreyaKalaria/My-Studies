Before we can get into the intricacies of sending and receiving shells, it's important to understand what a shell actually is. In the simplest possible terms, shells are what we use when interfacing with a Command Line environment (CLI). In other words, the common bash or sh programs in Linux are examples of shells, as are cmd.exe and Powershell on Windows. When targeting remote systems it is sometimes possible to force an application running on the server (such as a webserver, for example) to execute arbitrary code. When this happens, we want to use this initial access to obtain a shell running on the target.

1- Netcat
    nc -lvnp <port> -e "cmd.exe" >> We run the "cmd.exe" file on the target machine.
        -l is used to tell netcat that this will be a listener
        -v is used to request a verbose output
        -n tells netcat not to resolve host names or use DNS. Explaining this is outwith the scope of the room.
        -p indicates that the port specification will follow.
2- Socat
3- Metasploit -- multi/handler
